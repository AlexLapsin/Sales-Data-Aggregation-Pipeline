name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint, Type-Check & Test
    runs-on: ubuntu-latest
    #services:
      # (optional) spin up a real Postgres if you need it for tests
      # db:
      #   image: postgres:15
      #   env:
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #   ports:
      #     - 5432:5432

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install formatting & lint tools
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy

      - name: Black (style check)
        run: black --check .

      - name: Flake8 (lint)
        run: flake8 .

      - name: MyPy (static types)
        run: mypy src

      - name: Install test dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run pytest with coverage
        run: pytest --maxfail=1 --disable-warnings --cov=.

      # optionally upload coverage report
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

  build-docker:
    name: Build & Save Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build . -t my-etl:${{ github.sha }}

      - name: Save image to tarball
        run: |
          docker save my-etl:${{ github.sha }} | gzip > etl_${{ github.sha }}.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: etl-image
          path: etl_${{ github.sha }}.tar.gz
